{"version":3,"sources":["data.js","Questions.js","Footer.js","Refresh.js","App.js","index.js"],"names":["quizQuestions","question","responses","ans","correct","Questions","props","quiz","alpha","answerRef","React","useRef","useState","initial","prevIndex","setPrevIndex","activeClass","e","id","target","current","classList","remove","add","answer","select","useEffect","className","index","map","item","ref","el","onClick","Footer","decrement","increment","counter","Refresh","count","filter","x","length","class","refresh","App","arr","Array","fill","setCounter","changer","setChanger","answers","setAnswers","selection","setSelection","val","newArr","parseInt","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90aa71ab.chunk.js","sourcesContent":["export const quizQuestions =  [\r\n    {\r\n       question: \"What is the full form of HTTP?\",\r\n       responses: [\r\n          { ans: \"Hyper text transfer package\" },\r\n          { ans: \"Hyper text transfer protocol\", correct: true },\r\n          { ans: \"Hyphenation text test program\" },\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"HTML document start and end with which tag pairs?\",\r\n       responses: [\r\n          { ans: \"HTML\", correct: true },\r\n          { ans: \"WEB\" },\r\n          { ans: \"HEAD\" },\r\n          { ans: \"BODY\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"Which tag is used to create body text in HTML?\",\r\n       responses: [\r\n          { ans: \"HEAD\" },\r\n          { ans: \"BODY\", correct: true },\r\n          { ans: \"TITLE\" },\r\n          { ans: \"TEXT\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"Outlook Express is _________\",\r\n       responses: [\r\n          { ans: \"E-Mail Client\", correct: true },\r\n          { ans: \"Browser\" },\r\n          { ans: \"Search Engine\"},\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"What is a search engine?\",\r\n       responses: [\r\n          { ans: \"A hardware component \" },\r\n          {\r\n             ans: \"A machinery engine that search data\"\r\n          },\r\n          { ans: \"A web site that searches anything\", correct: true },\r\n          { ans: \"A program that searches engines\" }\r\n       ]\r\n    },\r\n    {\r\n       question:\r\n          \"What does the .com domain represents?\",\r\n       responses: [\r\n          { ans: \"Network\" },\r\n          { ans: \"Education\" },\r\n          { ans: \"Commercial\", correct: true },\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"In Satellite based communication, VSAT stands for? \",\r\n       responses: [\r\n          { ans: \" Very Small Aperture Terminal\", correct: true },\r\n          { ans: \"Varying Size Aperture Terminal \" },\r\n          {\r\n             ans: \"Very Small Analog Terminal\"\r\n          },\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"What is the full form of TCP/IP? \",\r\n       responses: [\r\n          { ans: \"Telephone call protocol / international protocol\" },\r\n          { ans: \"Transmission control protocol / internet protocol\", correct: true },\r\n          { ans: \"Transport control protocol / internet protocol \" },\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    },\r\n    {\r\n       question:\r\n          \"What is the full form of HTML?\",\r\n       responses: [\r\n          {\r\n             ans: \"Hyper text marking language\"\r\n          },\r\n          { ans: \"Hyphenation text markup language \" },\r\n          { ans: \"Hyper text markup language\", correct: true },\r\n          { ans: \"Hyphenation test marking language\" }\r\n       ]\r\n    },\r\n    {\r\n       question: \"\\\"Yahoo\\\", \\\"Infoseek\\\" and \\\"Lycos\\\" are _________?\",\r\n       responses: [\r\n          { ans: \"Browsers \" },\r\n          { ans: \"Search Engines\", correct: true },\r\n          { ans: \"News Group\" },\r\n          { ans: \"None of the above\" }\r\n       ]\r\n    }\r\n ];","import React from 'react';\r\n\r\n\r\nexport default function Questions(props){\r\n\r\n    const ans = props.quiz.responses;\r\n    const alpha = ['a','b','c','d'];\r\n    const answerRef = React.useRef([]);\r\n    const [prevIndex,setPrevIndex] = React.useState(props.initial);\r\n    //console.log(props.initial);\r\n    const activeClass=(e)=>{\r\n        let id = e.target.id;\r\n        if(prevIndex!==-1){\r\n          answerRef.current[prevIndex].classList.remove('click-state');\r\n        }\r\n        answerRef.current[id].classList.add('click-state');\r\n        setPrevIndex(id);\r\n        if(ans[id].correct){\r\n          props.answer(1);\r\n        }\r\n        else{\r\n          props.answer(0);\r\n        }\r\n        props.select(id);\r\n    }\r\n    \r\n    React.useEffect(()=>{\r\n      //console.log(\"mount\");\r\n      return () =>{\r\n       //console.log('unmount');\r\n      }\r\n      \r\n    },[])\r\n    \r\n    return(\r\n       <>\r\n        <p className=\"question\">{props.index+1+\") \"+props.quiz.question}</p>\r\n        {\r\n          ans.map((item,index)=>{\r\n            return <div \r\n                     ref={el => answerRef.current[index] = el} \r\n                     className={prevIndex===index?'click-state answers':'answers'} \r\n                     id={index} \r\n                     onClick={activeClass}>{alpha[index]+')  '+item.ans}</div>\r\n          })\r\n        }\r\n      </>\r\n    ); \r\n    \r\n  }","import React from \"react\";\r\n\r\nexport default function Footer(props){\r\n    return(\r\n      <div className=\"footer\">    \r\n        <button onClick={props.decrement}>prev</button>\r\n        <button onClick={props.increment}>{props.counter>=9?'Submit':'Next'}</button>\r\n      </div>\r\n    ); \r\n  }\r\n  ","import React from 'react'\r\n\r\n\r\nexport default function Refresh(props){\r\n    let count = props.correct.filter(x => x === 1).length;\r\n    \r\n    return(\r\n        <div class=\"refresh\">\r\n          {count<6?<h3>Better Luck Next Time</h3>:<h3>Great!!!</h3>}\r\n          <p>Total score: {count}/10</p>\r\n          <button className='ref-btn' onClick={props.refresh}>Refresh</button>\r\n        </div>\r\n    );\r\n  }","import React,{useState} from 'react';\nimport { quizQuestions } from './data';\nimport Questions from './Questions';\nimport Footer from './Footer';\nimport Refresh from './Refresh';\nimport './App.scss';\n\nfunction App() {\n  \n  const arr = new Array(10).fill(0);\n  const [counter,setCounter] = useState(0);\n  const [changer,setChanger] = useState(true);\n  const [answers,setAnswers] = useState(arr);\n  const [selection,setSelection] = useState(new Array(10).fill(-1));\n  \n  //console.log(selection);\n  const handleIncrement = ()=>{\n    if(counter<9){\n      setChanger(false);\n    setTimeout(() => {\n      setChanger(true);\n      \n     }, 100);\n      setCounter(counter+1);\n    } \n    else{\n      setCounter(10);\n    }\n  }\n  \n  const handleDecrement = () =>{\n    if(counter>0){\n      setChanger(false);\n      setTimeout(() => {\n        setChanger(true);\n      }, 100);\n      setCounter(counter-1);\n    }\n  }\n  \n  const handleAnswer =(val)=>{\n    let newArr = [...answers];\n    newArr[counter] = val;\n    setAnswers(newArr);\n  }\n  const handleSelect =(val)=>{\n    let newArr = [...selection];\n    newArr[counter] = parseInt(val);\n    setSelection(newArr);\n  }\n  const handleRefresh=()=>{\n    setCounter(0);\n    setChanger(true);\n    setAnswers(arr);\n    setSelection(new Array(10).fill(-1));\n  }\n  \n  return (\n    <div className=\"quiz-container\">\n      <h1>Quiz App</h1>\n      <div className=\"ques-section\">\n        {counter<=9? changer && <Questions \n                        quiz={quizQuestions[counter]} \n                        index={counter} \n                        initial={selection[counter]}\n                        answer={handleAnswer}\n                        select={handleSelect}/>:\n                     <Refresh \n                        correct={answers}\n                        refresh={handleRefresh}/>}\n      </div>\n      <Footer \n        increment={handleIncrement}\n        decrement={handleDecrement}\n        counter={counter}/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}