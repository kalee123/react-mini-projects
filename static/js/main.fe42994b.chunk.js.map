{"version":3,"sources":["QuoteText.js","Buttons.js","RandomQuote.js","App.js","index.js"],"names":["QuoteText","props","className","id","class","quote","author","Buttons","target","href","onClick","newQuote","colors","RandomQuote","reLoadQuote","setState","isRecived","state","data","fetch","then","response","json","console","log","catch","error","this","quotes","random","Math","floor","colorRandom","document","body","style","backgroundColor","color","React","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAEe,SAASA,EAAUC,GAC9B,OACE,qCACE,sBAAKC,UAAU,SAASC,GAAG,OAA3B,UACE,mBAAGC,MAAM,mBAAT,eACA,+BAAOH,EAAMI,WAEf,qBAAKH,UAAU,SAASC,GAAG,SAA3B,SACG,kCAAKF,EAAMK,eCRP,SAASC,EAAQN,GAC5B,OACE,sBAAKC,UAAU,UAAf,UACE,mBAAIC,GAAG,cAAcK,OAAO,SAASC,KAAK,8EAA1C,SACE,mBAAGP,UAAU,oBAEf,mBAAGC,GAAG,eAAgBM,KAAK,IAA3B,SACE,mBAAGP,UAAU,mBAEf,wBAAQC,GAAG,YAAYO,QAAST,EAAMU,SAAtC,0BCPR,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAEpHC,E,kDAEjB,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IAyBRa,YAAc,WACZ,EAAKC,SAAS,CACZC,WAAW,KA1Bb,EAAKC,MAAQ,CACXC,KAAO,GACPF,WAAY,GAJE,E,qDASlB,WAAoB,IAAD,OAGfG,MAFQ,0IAGPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAF,GAEJ,EAAKH,SAAS,CACZG,KAAMA,EACNF,WAAW,IAEbO,QAAQC,IAAI,EAAKP,UACfQ,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,MAEjCH,QAAQC,IAAI,c,oBASd,WACE,GAAGG,KAAKV,MAAMD,UAAU,CAEtB,IAAKY,EAAUD,KAAKV,MAAMC,KAArBU,OACDC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UACzBG,EAAcF,KAAKC,MAAsB,GAAhBD,KAAKD,UAClC,EAAqBD,EAAOC,GAAvBxB,EAAL,EAAKA,MAAMC,EAAX,EAAWA,OAGX,OAFA2B,SAASC,KAAKC,MAAMC,gBAAkBxB,EAAOoB,GAC7CC,SAASC,KAAKC,MAAME,MAAQzB,EAAOoB,GAEjC,sBAAK9B,UAAU,YAAf,UACE,sBAAKC,GAAG,YAAR,UACE,cAACH,EAAD,CAAWM,OAAQA,EAASD,MAAOA,IACnC,cAACE,EAAD,CAASI,SAAUgB,KAAKb,YAAaT,MAAOA,OAE9C,qBAAKH,UAAU,SAAf,yBAMN,OAAO,qBAAKC,GAAG,kB,GAvDoBmC,IAAMC,W,MCMhCC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,W","file":"static/js/main.fe42994b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function QuoteText(props){\r\n    return(\r\n      <>\r\n        <div className=\"quotes\" id=\"text\">\r\n          <i class=\"fa fa-quote-left\"> </i>\r\n          <span>{props.quote}</span>\r\n        </div>\r\n        <div className=\"author\" id=\"author\">\r\n           <p>-{props.author}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }","import React from \"react\";\r\n\r\nexport default function Buttons(props){\r\n    return(\r\n      <div className=\"buttons\">\r\n        <a  id=\"tweet-quote\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\">\r\n          <i className=\"fa fa-twitter\"></i>\r\n        </a>\r\n        <a id=\"tumblr-quote\"  href=\"#\">\r\n          <i className=\"fa fa-tumblr\"></i>\r\n        </a>\r\n        <button id=\"new-quote\" onClick={props.newQuote}>New Quote</button>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React from \"react\";\r\nimport QuoteText from \"./QuoteText\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\r\n\r\nexport default class RandomQuote extends React.Component{\r\n  \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data : {},\r\n        isRecived : false\r\n      }\r\n      \r\n    }\r\n    \r\n    componentDidMount(){\r\n      let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n      \r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n        //console.log(data);\r\n          this.setState({\r\n            data: data,\r\n            isRecived: true\r\n          });\r\n          console.log(this.state);\r\n         }).catch(error => console.log(error));\r\n       \r\n      console.log(\"didmount\"); \r\n    }\r\n    \r\n    reLoadQuote = ()=>{\r\n      this.setState({\r\n        isRecived: true\r\n      })\r\n    }\r\n    \r\n    render(){\r\n      if(this.state.isRecived){\r\n  \r\n        let {quotes} = this.state.data;\r\n        let random = Math.floor(Math.random() * 102);\r\n        let colorRandom = Math.floor(Math.random() * 10);\r\n        let {quote,author} = quotes[random]; \r\n        document.body.style.backgroundColor = colors[colorRandom];\r\n        document.body.style.color = colors[colorRandom];\r\n        return(\r\n          <div className=\"container\">\r\n            <div id=\"quote-box\">\r\n              <QuoteText author={author}  quote={quote} />\r\n              <Buttons newQuote={this.reLoadQuote} quote={quote}/>\r\n            </div>  \r\n            <div className=\"footer\">by kalee</div>\r\n          </div>\r\n        );\r\n        \r\n      }  \r\n      else\r\n      return <div id=\"quote-box\"></div>;\r\n      \r\n    }\r\n  \r\n  }","import React from 'react';\nimport RandomQuote from './RandomQuote';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <RandomQuote />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}